package dat3.car.service;

import dat3.car.dto.MemberRequestDto;
import dat3.car.dto.MemberResponseDto;
import dat3.car.entity.Member;
import dat3.car.repository.MemberRepository;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.junit.jupiter.MockitoExtension;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.ArgumentMatchers.any;

@ExtendWith(MockitoExtension.class)
class MemberServiceMockitoTest {
    @Mock
    MemberRepository memberRepository;

    MemberService memberService;

    @BeforeEach
    void setUp() {
        memberService = new MemberService(memberRepository);
    }
    @Test
    void getMembersAdmin() {
        Member m1 = new Member("m1", "m1@a.dk", "test12", "bb", "Olsen", "xx vej 34", "Lyngby", "2800");
        Member m2 = new Member("m2", "m2@a.dk", "test12", "aa", "hansen", "xx vej 34", "Lyngby", "2800");
        m1.setCreated(LocalDateTime.now());
        m2.setCreated(LocalDateTime.now());

        Mockito.when(memberRepository.findAll()).thenReturn(List.of(m1,m2));

        List<MemberResponseDto> members = memberService.getMembers(true);
        assertEquals(2,members.size());
        assertNotNull(members.get(0).getCreated());
    }
    @Test
    void getMembersNotAdmin() {
        Member m1 = new Member("m1", "m1@a.dk", "test12", "bb", "Olsen", "xx vej 34", "Lyngby", "2800");
        Member m2 = new Member("m2", "m2@a.dk", "test12", "aa", "hansen", "xx vej 34", "Lyngby", "2800");
        m1.setCreated(LocalDateTime.now());
        m2.setCreated(LocalDateTime.now());

        Mockito.when(memberRepository.findAll()).thenReturn(List.of(m1,m2));

        List<MemberResponseDto> members = memberService.getMembers(false);
        assertEquals(2,members.size());
        assertNull(members.get(0).getCreated());
    }
    @Test
    void findMemberByUsername() {
        Member m1 = new Member("m1", "test12", "m1@a.dk", "bb", "Olsen", "xx vej 34", "Lyngby", "2800");
        m1.setCreated(LocalDateTime.now());
        Mockito.when(memberRepository.findByUsername("m1")).thenReturn(java.util.Optional.of(m1));

        MemberResponseDto response = memberService.getMember("m1", true);
        assertEquals("m1@a.dk",response.getEmail());

    }


    @Test
    void getMembers() {
        Member m1 = new Member("m1", "m1@a.dk", "test12", "bb", "Olsen", "xx vej 34", "Lyngby", "2800");
        Member m2 = new Member("m2", "m2@a.dk", "test12", "aa", "hansen", "xx vej 34", "Lyngby", "2800");

        Mockito.when(memberRepository.findAll()).thenReturn(List.of(m1,m2));

        List<MemberResponseDto> members = memberService.getMembers(false);
        assertEquals(2,members.size());
    }

    @Test
    void getMember() {
        Member m1 = new Member("m1", "m1@a.dk", "test12", "bb", "Olsen", "xx vej 34", "Lyngby", "2800");

        Mockito.when(memberRepository.findByUsername("m1")).thenReturn(Optional.of(m1));

        MemberResponseDto member = memberService.getMember("m1", false);
        assertEquals("m1",member.getUsername());
    }

    @Test
    void addMember() {
        Member m1 = new Member("m1", "test12", "m1@a.dk", "bb", "Olsen", "xx vej 34", "Lyngby", "2800");
        //If Id was generated by the server, for example as for car you would need to set the id here
        Mockito.when(memberRepository.save(any(Member.class))).thenReturn(m1);

        //Quick way to get a MemberRequest (remember eventually values come via a incoming JSON object)
        MemberRequestDto request = new MemberRequestDto(m1);
        MemberResponseDto response = memberService.addMember(request);
        assertEquals("m1@a.dk",response.getEmail());
    }

}